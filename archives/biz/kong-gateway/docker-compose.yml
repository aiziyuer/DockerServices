version: '2.1'

# 参考1: https://github.com/Kong/docker-kong/blob/master/compose/docker-compose.yml
# 参考2: https://gist.github.com/pantsel/73d949774bd8e917bfd3d9745d71febf

networks:
  kong-net:

x-common:
  &x-common
  image: "${KONG_DOCKER_TAG:-kong:latest}"
  user: "root"
  networks:
    - kong-net
  volumes:
    - ./conf/kong/kong.conf:/etc/kong/kong.conf:z
    - ./data/kong/logs:/usr/local/kong/logs:z
  restart: on-failure

services:

  kong-migrations:
    << : *x-common
    command: kong migrations bootstrap -c /etc/kong/kong.conf
    depends_on:
      postgres:
        condition: service_healthy
    links:
      - postgres:postgres

  kong-migrations-up:
    << : *x-common
    command: kong migrations up -c /etc/kong/kong.conf
    depends_on:
      postgres:
        condition: service_healthy
    links:
      - postgres:postgres

  kong:
    << : *x-common
    command: kong start -c /etc/kong/kong.conf
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8000:8000/tcp"
      - "8001:8001/tcp"
      - "8443:8443/tcp"
      - "80:8000/tcp"
      - "443:8443/tcp"
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10

  kong-dashboard:
    image: pgbi/kong-dashboard
    command: "start --kong-url http://kong:8001"
    links:
      - kong:kong
    ports:
      - 8080:8080

  postgres:
    image: postgres:9.5
    environment:
      POSTGRES_DB: kong
      POSTGRES_PASSWORD: kong
      POSTGRES_USER: kong
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${KONG_PG_USER:-kong}"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: on-failure
    stdin_open: true
    tty: true
    networks:
      - kong-net
    volumes:
      - ./data/postgres/data:/var/lib/postgresql/data:z
